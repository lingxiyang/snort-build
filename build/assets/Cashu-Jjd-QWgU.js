var h=(t,e,r)=>{if(!e.has(t))throw TypeError("Cannot "+r)};var a=(t,e,r)=>(h(t,e,"read from private field"),r?r.call(t):e.get(t)),s=(t,e,r)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,r)},i=(t,e,r,l)=>(h(t,e,"write to private field"),l?l.call(t,r):e.set(t,r),r);import{W as u,a as m}from"./index-pSqMUyT8.js";import{C as c,a as d}from"./CashuWallet-jfLTjSPb.js";var o,n;class g{constructor(e){s(this,o,void 0);s(this,n,void 0);i(this,o,e)}canAutoLogin(){return!0}isReady(){return a(this,n)!==void 0}async getInfo(){if(!a(this,n))throw new u(m.GeneralError,"Wallet not initialized");return{nodePubKey:"asdd",alias:"Cashu  mint: "+a(this,o)}}async login(){const e=new c(a(this,o)),r=await e.getKeys();return i(this,n,new d(r,e)),!0}close(){return Promise.resolve(!0)}getBalance(){throw new Error("Method not implemented.")}createInvoice(){throw new Error("Method not implemented.")}payInvoice(){throw new Error("Method not implemented.")}getInvoices(){return Promise.resolve([])}}o=new WeakMap,n=new WeakMap;export{g as CashuWallet};
